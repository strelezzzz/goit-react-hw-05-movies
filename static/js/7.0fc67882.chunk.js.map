{"version":3,"file":"static/js/7.0fc67882.chunk.js","mappings":"iLA+DA,UA3De,WAAO,IAAD,EACnB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAW,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAGjDC,EAAAA,EAAAA,YAAU,WACmB,KAAvBF,EAAYG,QAChBH,GAAeI,EAAAA,EAAAA,gBAAoBJ,GAAaK,KAAKX,EACtD,GAAE,CAACM,IAkBJ,OACE,iCACE,kBAAMM,SAdW,SAAAC,GAEnB,GADAA,EAAEC,iBACmB,KAAjBjB,EAAMY,OACR,OAAOM,MAAM,mBAEfL,EAAAA,EAAAA,gBAAoBb,GAAOc,KAAKX,GAEhCG,EAAgB,CAAEN,MAAAA,IAElBC,EAAS,GACV,EAIG,WACE,mBAAQkB,KAAK,SAAb,qBACA,kBACEA,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,GACZC,SAzBkB,SAAAP,GACxBf,EAASe,EAAEQ,cAAcC,MAC1B,EAwBOA,MAAOzB,QAGX,wBACGE,EAAOwB,OAAS,GACfxB,EAAOyB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMzB,GAA1C,SACGqB,KAFIC,EADA,QAUpB,C,2ECpDKI,EAAU,mCAEhBC,IAAAA,SAAAA,QAAyB,gCAGzB,IAAMC,EAAiB,mCAAG,+GAECD,IAAAA,IAAA,sCAAyCD,EAAzC,MAFD,cAEhBG,EAFgB,gBAGDA,EAASC,KAAKC,QAAQX,KAAI,SAAAY,GAC7C,MAAO,CACLX,MAAOW,EAAKX,MACZC,GAAIU,EAAKV,GAEZ,IARqB,cAGhBW,EAHgB,yBASfA,GATe,kCAWtBC,QAAQC,IAAI,KAAMC,SAXI,0DAAH,qDAgBjBC,EAAe,mCAAG,WAAM5C,GAAN,yFACCkC,IAAAA,IAAA,gCACID,EADJ,iCACoCjC,EADpC,YADD,YAChBoC,EADgB,wCAKCA,EAASC,KAAKC,QAAQX,KAAI,SAAAY,GAC7C,MAAO,CACLX,MAAOW,EAAKX,MACZC,GAAIU,EAAKV,GAEZ,IAVmB,cAKdW,EALc,yBAWbA,GAXa,wBAaTK,QAAQC,OAAO,IAAIC,MAAM,wBAbhB,qFAAH,sDAiBfC,EAAe,mCAAG,WAAMnB,GAAN,kGAEGK,IAAAA,IAAA,gBACZL,EADY,oBACEI,EADF,sBAFH,cAEdG,EAFc,gBAKEA,EAASC,KALX,cAKdY,EALc,yBAMbA,GANa,kCAQpBR,QAAQC,IAAI,KAAMC,SARE,0DAAH,sDAafO,EAAY,mCAAG,WAAMrB,GAAN,kGAEMK,IAAAA,IAAA,gBACZL,EADY,4BACUI,EADV,sBAFN,cAEXG,EAFW,gBAKKA,EAASC,KAAKc,KALnB,cAKXF,EALW,yBAMVA,GANU,kCAQjBR,QAAQC,IAAI,KAAMC,SARD,0DAAH,sDAeZS,EAAe,mCAAG,WAAMvB,GAAN,kGAEGK,IAAAA,IAAA,gBAAmBL,EAAnB,4BAAyCI,IAF5C,cAEdG,EAFc,OAGdiB,EAAUjB,EAASC,KAAKC,QAHV,kBAIbe,GAJa,gCAMpBZ,QAAQC,IAAI,KAAMC,SANE,yDAAH,sDAUf9B,EAAM,CACVsB,kBAAAA,EACAS,gBAAAA,EACAI,gBAAAA,EACAE,aAAAA,EACAE,gBAAAA,GAGF,K","sources":["components/pages/Movies.jsx","services/API-service.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport api from 'services/API-service';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const location = useLocation();\n  // console.log('location:', location);\n\n  const searchQuery = searchParams.get('query') ?? '';\n  // console.log('searchQuery:', searchQuery);\n\n  useEffect(() => {\n    if (searchQuery.trim() === '') return;\n    searchQuery && api.getSearchMovies(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  const handleChangeInput = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return alert('Incorrect input');\n    }\n    api.getSearchMovies(query).then(setMovies);\n\n    setSearchParams({ query });\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">Search</button>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"\"\n          onChange={handleChangeInput}\n          value={query}\n        ></input>\n      </form>\n      <ul>\n        {movies.length > 0 &&\n          movies.map(({ title, id }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","// api key = b6c47595cd552e39159b1bc0cf721807\n// https://api.themoviedb.org/3/movie/550?api_key=b6c47595cd552e39159b1bc0cf721807\n\n// /trending/get-trending /trending/{media_type}/{time_window} список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\nimport axios from 'axios';\nconst API_KEY = 'b6c47595cd552e39159b1bc0cf721807';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// список найпопулярніших фільмів на сьогодні\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY} `);\n    const titles = await response.data.results.map(item => {\n      return {\n        title: item.title,\n        id: item.id,\n      };\n    });\n    return titles;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів\nconst getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  );\n  if (response) {\n    const titles = await response.data.results.map(item => {\n      return {\n        title: item.title,\n        id: item.id,\n      };\n    });\n    return titles;\n  }\n  return await Promise.reject(new Error('Somthing goes wrong'));\n};\n\n// запит повної інформації про фільм для сторінки кінофільму\nconst getMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${API_KEY}&language=en-US? `\n    );\n    const details = await response.data;\n    return details;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n// запит інформації про акторський склад для сторінки кінофільму\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=b6c47595cd552e39159b1bc0cf721807&language=en-US\nconst getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US? `\n    );\n    const details = await response.data.cast;\n    return details;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// запит оглядів для сторінки кінофільму\n// https://api.themoviedb.org/3/movie/361743/reviews?api_key=b6c47595cd552e39159b1bc0cf721807\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst api = {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","trim","api","then","onSubmit","e","preventDefault","alert","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","length","map","title","id","to","state","from","API_KEY","axios","getTrendingMovies","response","data","results","item","titles","console","log","message","getSearchMovies","Promise","reject","Error","getMovieDetails","details","getMovieCast","cast","getMovieReviews","reviews"],"sourceRoot":""}