{"version":3,"file":"static/js/947.80b1e86f.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.jsx","services/API-service.js"],"sourcesContent":["import api from 'services/API-service';\nimport { useState, useEffect } from 'react';\nimport {\n  Link,\n  useParams,\n  useLocation,\n  Outlet,\n  useNavigate,\n} from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams('movieId');\n  const location = useLocation;\n  // console.log('movieId:', movieId);\n  // const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    api.getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    navigate(backLinkHref);\n  };\n\n  const { title, genres, overview, poster_path, release_date, vote_average } =\n    movie ?? {};\n\n  const imageURL = 'https://image.tmdb.org/t/p/w300';\n\n  const year = new Date(release_date).getFullYear();\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleGoBack}>\n        Go back\n      </button>\n      <h2>\n        {title}({year})\n      </h2>\n      {poster_path && <img src={imageURL + poster_path} alt={title} />}\n      <p>User Score:{Math.round(vote_average * 10)}%</p>\n\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>\n        {genres &&\n          genres\n            .map(item => {\n              return item.name;\n            })\n            .join(' ')}\n      </p>\n      <hr\n        style={{\n          color: 'green',\n          backgroundColor: 'red',\n          height: 4,\n        }}\n      />\n      <p>Additional Information</p>\n      <ul>\n        <li>\n          <Link to={`/movies/${movieId}/cast`} state={{ from: location }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={`/movies/${movieId}/reviews`} state={{ from: location }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      <Outlet />\n      <hr />\n    </>\n  );\n};\nexport default MovieDetails;\n\n// const ParsedDetail = {\n//   adult: false,\n//   backdrop_path: '/hYZ4a0JvPETdfgJJ9ZzyFufq8KQ.jpg',\n//   belongs_to_collection: null,\n//   budget: 0,\n//   genres: [\n//     { id: 28, name: 'Action' },\n//     { id: 18, name: 'Drama' },\n//     { id: 878, name: 'Science Fiction' },\n//     { id: 14, name: 'Fantasy' },\n//   ],\n//   homepage: 'https://www.unitedartistsreleasing.com/samaritan/',\n//   id: 629176,\n//   imdb_id: 'tt5500218',\n//   original_language: 'en',\n//   original_title: 'Samaritan',\n//   overview:\n//     'Thirteen year old Sam Cleary  suspects that his mysteriously reclusive neighbor Mr. Smith is actually the legendary vigilante Samaritan, who was reported dead 20 years ago. With crime on the rise and the city on the brink of chaos, Sam makes it his mission to coax his neighbor out of hiding to save the city from ruin.',\n//   popularity: 961.292,\n//   poster_path: '/zgH8Ej50n2cvJCMJrxd4twEwSqz.jpg',\n//   production_companies: [\n//     {\n//       id: 21,\n//       logo_path: '/aOWKh4gkNrfFZ3Ep7n0ckPhoGb5.png',\n//       name: 'Metro-Goldwyn-Mayer',\n//       origin_country: 'US',\n//     },\n//     {\n//       id: 166120,\n//       logo_path: '/fRuHQF9DB4Zl3ha62D5Bpu1a5TL.png',\n//       name: 'Balboa Productions',\n//       origin_country: 'US',\n//     },\n//   ],\n//   production_countries: [\n//     { iso_3166_1: 'US', name: 'United States of America' },\n//   ],\n//   release_date: '2022-08-25',\n//   revenue: 0,\n//   runtime: 102,\n//   spoken_languages: [\n//     { english_name: 'English', iso_639_1: 'en', name: 'English' },\n//     { english_name: 'German', iso_639_1: 'de', name: 'Deutsch' },\n//   ],\n//   status: 'Released',\n//   tagline: \"25 years ago the world's greatest hero vanished.\",\n//   title: 'Samaritan',\n//   video: false,\n//   vote_average: 6.799,\n//   vote_count: 359,\n// };\n","// api key = b6c47595cd552e39159b1bc0cf721807\n// https://api.themoviedb.org/3/movie/550?api_key=b6c47595cd552e39159b1bc0cf721807\n\n// /trending/get-trending /trending/{media_type}/{time_window} список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\nimport axios from 'axios';\nconst API_KEY = 'b6c47595cd552e39159b1bc0cf721807';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// список найпопулярніших фільмів на сьогодні\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY} `);\n    const titles = await response.data.results.map(item => {\n      return {\n        title: item.title,\n        id: item.id,\n      };\n    });\n    return titles;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів\nconst getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  );\n  if (response) {\n    const titles = await response.data.results.map(item => {\n      return {\n        title: item.title,\n        id: item.id,\n      };\n    });\n    return titles;\n  }\n  return await Promise.reject(new Error('Somthing goes wrong'));\n};\n\n// запит повної інформації про фільм для сторінки кінофільму\nconst getMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${API_KEY}&language=en-US? `\n    );\n    const details = await response.data;\n    return details;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n// запит інформації про акторський склад для сторінки кінофільму\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=b6c47595cd552e39159b1bc0cf721807&language=en-US\nconst getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US? `\n    );\n    const details = await response.data.cast;\n    return details;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// запит оглядів для сторінки кінофільму\n// https://api.themoviedb.org/3/movie/361743/reviews?api_key=b6c47595cd552e39159b1bc0cf721807\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst api = {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["useState","movie","setMovie","movieId","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","useEffect","api","then","title","genres","overview","poster_path","release_date","vote_average","year","Date","getFullYear","type","onClick","src","alt","Math","round","map","item","name","join","style","color","backgroundColor","height","to","API_KEY","axios","getTrendingMovies","response","data","results","id","titles","console","log","message","getSearchMovies","query","Promise","reject","Error","getMovieDetails","details","getMovieCast","cast","getMovieReviews","reviews"],"sourceRoot":""}