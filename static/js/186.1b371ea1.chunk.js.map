{"version":3,"file":"static/js/186.1b371ea1.chunk.js","mappings":"yKAiCA,UA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBAAoBC,OAAOP,IAAUQ,KAAKJ,EAC3C,GAAE,CAACJ,KAGF,wBACGG,EAAQM,OAAS,EAChBN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,yBAEI,iCACE,oCAAYF,MACZ,uBAAIC,QAJDC,EADC,KAWZ,sEAIP,C,2ECtBKC,EAAU,mCAEhBC,IAAAA,SAAAA,QAAyB,gCAGzB,IAAMC,EAAiB,mCAAG,+GAECD,IAAAA,IAAA,sCAAyCD,EAAzC,MAFD,cAEhBG,EAFgB,gBAGDA,EAASC,KAAKC,QAAQT,KAAI,SAAAU,GAC7C,MAAO,CACLC,MAAOD,EAAKC,MACZR,GAAIO,EAAKP,GAEZ,IARqB,cAGhBS,EAHgB,yBASfA,GATe,kCAWtBC,QAAQC,IAAI,KAAMC,SAXI,0DAAH,qDAgBjBC,EAAe,mCAAG,WAAMC,GAAN,yFACCZ,IAAAA,IAAA,gCACID,EADJ,iCACoCa,EADpC,YADD,YAChBV,EADgB,wCAKCA,EAASC,KAAKC,QAAQT,KAAI,SAAAU,GAC7C,MAAO,CACLC,MAAOD,EAAKC,MACZR,GAAIO,EAAKP,GAEZ,IAVmB,cAKdS,EALc,yBAWbA,GAXa,wBAaTM,QAAQC,OAAO,IAAIC,MAAM,wBAbhB,qFAAH,sDAiBfC,EAAe,mCAAG,WAAMlB,GAAN,kGAEGE,IAAAA,IAAA,gBACZF,EADY,oBACEC,EADF,sBAFH,cAEdG,EAFc,gBAKEA,EAASC,KALX,cAKdc,EALc,yBAMbA,GANa,kCAQpBT,QAAQC,IAAI,KAAMC,SARE,0DAAH,sDAafQ,EAAY,mCAAG,WAAMpB,GAAN,kGAEME,IAAAA,IAAA,gBACZF,EADY,4BACUC,EADV,sBAFN,cAEXG,EAFW,gBAKKA,EAASC,KAAKgB,KALnB,cAKXF,EALW,yBAMVA,GANU,kCAQjBT,QAAQC,IAAI,KAAMC,SARD,0DAAH,sDAeZU,EAAe,mCAAG,WAAMtB,GAAN,kGAEGE,IAAAA,IAAA,gBAAmBF,EAAnB,4BAAyCC,IAF5C,cAEdG,EAFc,OAGdd,EAAUc,EAASC,KAAKC,QAHV,kBAIbhB,GAJa,gCAMpBoB,QAAQC,IAAI,KAAMC,SANE,yDAAH,sDAUfnB,EAAM,CACVU,kBAAAA,EACAU,gBAAAA,EACAK,gBAAAA,EACAE,aAAAA,EACAE,gBAAAA,GAGF,K","sources":["components/Reviews/Reviews.jsx","services/API-service.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/API-service';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  // console.log(typeof movieId);\n  useEffect(() => {\n    api.getMovieReviews(Number(movieId)).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length > 0 ? (\n        reviews.map(({ author, content, id }) => (\n          <li key={id}>\n            {\n              <>\n                <h3>Author:{author}</h3>\n                <p>{content}</p>\n              </>\n            }\n          </li>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","// api key = b6c47595cd552e39159b1bc0cf721807\n// https://api.themoviedb.org/3/movie/550?api_key=b6c47595cd552e39159b1bc0cf721807\n\n// /trending/get-trending /trending/{media_type}/{time_window} список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\nimport axios from 'axios';\nconst API_KEY = 'b6c47595cd552e39159b1bc0cf721807';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// список найпопулярніших фільмів на сьогодні\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY} `);\n    const titles = await response.data.results.map(item => {\n      return {\n        title: item.title,\n        id: item.id,\n      };\n    });\n    return titles;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів\nconst getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  );\n  if (response) {\n    const titles = await response.data.results.map(item => {\n      return {\n        title: item.title,\n        id: item.id,\n      };\n    });\n    return titles;\n  }\n  return await Promise.reject(new Error('Somthing goes wrong'));\n};\n\n// запит повної інформації про фільм для сторінки кінофільму\nconst getMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${API_KEY}&language=en-US? `\n    );\n    const details = await response.data;\n    return details;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n// запит інформації про акторський склад для сторінки кінофільму\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=b6c47595cd552e39159b1bc0cf721807&language=en-US\nconst getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US? `\n    );\n    const details = await response.data.cast;\n    return details;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// запит оглядів для сторінки кінофільму\n// https://api.themoviedb.org/3/movie/361743/reviews?api_key=b6c47595cd552e39159b1bc0cf721807\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst api = {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","api","Number","then","length","map","author","content","id","API_KEY","axios","getTrendingMovies","response","data","results","item","title","titles","console","log","message","getSearchMovies","query","Promise","reject","Error","getMovieDetails","details","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}