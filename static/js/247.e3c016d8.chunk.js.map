{"version":3,"file":"static/js/247.e3c016d8.chunk.js","mappings":"0KAqCA,UA/Ba,WACX,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,WACHF,GAELG,EAAAA,EAAAA,aAAiBC,OAAOJ,IAAUK,KAAKN,EACxC,GAAE,CAACC,KAGF,+BAEE,wBACGF,GACCA,EAAUQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAcC,EAApC,EAAoCA,UAApC,OACZ,4BACE,gBAAKC,IApBF,kCAoBkBF,EAAcG,IAAKJ,KACxC,2BACE,uBAAIA,KACJ,uBAAIE,SAJEH,EADE,OAavB,C,2EC1BKM,EAAU,mCAEhBC,IAAAA,SAAAA,QAAyB,gCAGzB,IAAMC,EAAiB,mCAAG,+GAECD,IAAAA,IAAA,sCAAyCD,EAAzC,MAFD,cAEhBG,EAFgB,gBAGDA,EAASC,KAAKC,QAAQZ,KAAI,SAAAa,GAC7C,MAAO,CACLC,MAAOD,EAAKC,MACZb,GAAIY,EAAKZ,GAEZ,IARqB,cAGhBc,EAHgB,yBASfA,GATe,kCAWtBC,QAAQC,IAAI,KAAMC,SAXI,0DAAH,qDAgBjBC,EAAe,mCAAG,WAAMC,GAAN,yFACCZ,IAAAA,IAAA,gCACID,EADJ,iCACoCa,EADpC,YADD,YAChBV,EADgB,wCAKCA,EAASC,KAAKC,QAAQZ,KAAI,SAAAa,GAC7C,MAAO,CACLC,MAAOD,EAAKC,MACZb,GAAIY,EAAKZ,GAEZ,IAVmB,cAKdc,EALc,yBAWbA,GAXa,wBAaTM,QAAQC,OAAO,IAAIC,MAAM,wBAbhB,qFAAH,sDAiBfC,EAAe,mCAAG,WAAMvB,GAAN,kGAEGO,IAAAA,IAAA,gBACZP,EADY,oBACEM,EADF,sBAFH,cAEdG,EAFc,gBAKEA,EAASC,KALX,cAKdc,EALc,yBAMbA,GANa,kCAQpBT,QAAQC,IAAI,KAAMC,SARE,0DAAH,sDAafQ,EAAY,mCAAG,WAAMzB,GAAN,kGAEMO,IAAAA,IAAA,gBACZP,EADY,4BACUM,EADV,sBAFN,cAEXG,EAFW,gBAKKA,EAASC,KAAKgB,KALnB,cAKXF,EALW,yBAMVA,GANU,kCAQjBT,QAAQC,IAAI,KAAMC,SARD,0DAAH,sDAeZU,EAAe,mCAAG,WAAM3B,GAAN,kGAEGO,IAAAA,IAAA,gBAAmBP,EAAnB,4BAAyCM,IAF5C,cAEdG,EAFc,OAGdmB,EAAUnB,EAASC,KAAKC,QAHV,kBAIbiB,GAJa,gCAMpBb,QAAQC,IAAI,KAAMC,SANE,yDAAH,sDAUfrB,EAAM,CACVY,kBAAAA,EACAU,gBAAAA,EACAK,gBAAAA,EACAE,aAAAA,EACAE,gBAAAA,GAGF,K","sources":["components/Cast/Cast.jsx","services/API-service.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n// import testCast from 'services/oneCast';\nimport api from 'services/API-service';\nconst imageURL = 'https://image.tmdb.org/t/p/w200';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    api.getMovieCast(Number(movieId)).then(setMovieCast);\n  }, [movieId]);\n\n  return (\n    <>\n      {/* <h2>Cast</h2> */}\n      <ul>\n        {movieCast &&\n          movieCast.map(({ id, original_name, profile_path, character }) => (\n            <div key={id}>\n              <img src={imageURL + profile_path} alt={original_name} />\n              <li>\n                <p>{original_name}</p>\n                <p>{character}</p>\n              </li>\n            </div>\n          ))}\n        {/* <div>This is Test CAST</div> */}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","// api key = b6c47595cd552e39159b1bc0cf721807\n// https://api.themoviedb.org/3/movie/550?api_key=b6c47595cd552e39159b1bc0cf721807\n\n// /trending/get-trending /trending/{media_type}/{time_window} список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\nimport axios from 'axios';\nconst API_KEY = 'b6c47595cd552e39159b1bc0cf721807';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// список найпопулярніших фільмів на сьогодні\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY} `);\n    const titles = await response.data.results.map(item => {\n      return {\n        title: item.title,\n        id: item.id,\n      };\n    });\n    return titles;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів\nconst getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n  );\n  if (response) {\n    const titles = await response.data.results.map(item => {\n      return {\n        title: item.title,\n        id: item.id,\n      };\n    });\n    return titles;\n  }\n  return await Promise.reject(new Error('Somthing goes wrong'));\n};\n\n// запит повної інформації про фільм для сторінки кінофільму\nconst getMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${API_KEY}&language=en-US? `\n    );\n    const details = await response.data;\n    return details;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n// запит інформації про акторський склад для сторінки кінофільму\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=b6c47595cd552e39159b1bc0cf721807&language=en-US\nconst getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US? `\n    );\n    const details = await response.data.cast;\n    return details;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// запит оглядів для сторінки кінофільму\n// https://api.themoviedb.org/3/movie/361743/reviews?api_key=b6c47595cd552e39159b1bc0cf721807\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst api = {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["useState","movieCast","setMovieCast","movieId","useParams","useEffect","api","Number","then","map","id","original_name","profile_path","character","src","alt","API_KEY","axios","getTrendingMovies","response","data","results","item","title","titles","console","log","message","getSearchMovies","query","Promise","reject","Error","getMovieDetails","details","getMovieCast","cast","getMovieReviews","reviews"],"sourceRoot":""}